
package BloodBankManagement;

//Read files
import java.io.File;  // Import the File class
import java.io.FileNotFoundException;  // Import this class to handle errors
import java.util.Scanner; // Import the Scanner class to read text files

//Write files
import java.io.FileWriter;   // Import the FileWriter class
import java.io.IOException;  // Import the IOException class to handle errors

/**
 *
 * @author pault
 */
public class ActivityLog extends javax.swing.JInternalFrame {

    /**
     * Creates new form ActionLog
     */
    public ActivityLog() {
        initComponents();
    }
    
    
    // Paul's functions
    
    //Read the text from the activityLog.txt file
    //Save that line-to-line
    //Then change the text of the activityLogTextAre
    //Returns a boolean, true if successful, false if unsuccessful
    private boolean updateActivityLogComponent(){
        
        try {
            File activityLogFile = new File("activityLog.txt");
            String logUpdate;
            String currentLogText = "";
            
            Scanner myReader = new Scanner(activityLogFile);

            while(myReader.hasNextLine()){
                logUpdate = myReader.nextLine();
                currentLogText += (logUpdate + "\n");
            }
            
            myReader.close();
            activityLogTextArea.setText(currentLogText);
            
        } catch(FileNotFoundException e){
            //Display error
            return false;
        }
        
        return true;
    }
    
    
    //Take a parameter String input
    //Write this input to the activityLog.txt file
    //Returns a boolean, true if successful, false if unsuccessful
    public static boolean writeToActivityLogFile(String message){
        
        try{
            //'true' flag tells the fileWriter not to overwrite the file
            FileWriter myWriter = new FileWriter("activityLog.txt", true);
            myWriter.write(message + "\n");
            myWriter.close();
            return true;
        } catch(IOException e){
            //Display error
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        activityLogPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        activityLogTextArea = new javax.swing.JTextArea();
        exitButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        activityLogPanel.setBackground(new java.awt.Color(239, 245, 250));
        activityLogPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Activity Log", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bahnschrift", 0, 16), new java.awt.Color(204, 0, 0))); // NOI18N

        activityLogTextArea.setEditable(false);
        activityLogTextArea.setColumns(20);
        activityLogTextArea.setLineWrap(true);
        activityLogTextArea.setRows(5);
        activityLogTextArea.setCaretColor(new java.awt.Color(255, 255, 255));
        activityLogTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        activityLogTextArea.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                activityLogTextAreaPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(activityLogTextArea);

        javax.swing.GroupLayout activityLogPanelLayout = new javax.swing.GroupLayout(activityLogPanel);
        activityLogPanel.setLayout(activityLogPanelLayout);
        activityLogPanelLayout.setHorizontalGroup(
            activityLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activityLogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        activityLogPanelLayout.setVerticalGroup(
            activityLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activityLogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
        );

        exitButton.setBackground(new java.awt.Color(255, 0, 0));
        exitButton.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        exitButton.setForeground(new java.awt.Color(255, 255, 255));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(230, 166, 62));
        clearButton.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(activityLogPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addGap(66, 66, 66)
                .addComponent(clearButton)
                .addGap(66, 66, 66)
                .addComponent(exitButton)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(activityLogPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(updateButton)
                    .addComponent(clearButton))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        
        /*  TESTING READING/WRITING,  REMOVE WHEN ACTUAL LOGS ARE IMPLEMENTED
        try{
            FileWriter myWriter = new FileWriter("activityLog.txt");
            myWriter.write("Java files are hard!");
            myWriter.write("\nNext line please");
            myWriter.write("\nOK");
            myWriter.close();
        } catch(IOException e){
            //Display error
        }
        */
        
        updateActivityLogComponent();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void activityLogTextAreaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_activityLogTextAreaPropertyChange
        // TODO add your handling code here:z
        updateActivityLogComponent();
    }//GEN-LAST:event_activityLogTextAreaPropertyChange

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        
        //Sould ONLY be AVAILABLE WITH ADMIN CLEARENCE
        //Set visible false if not admin
        
        try{
            //Use 'false' flag to ensure the file is overwritten
            FileWriter myOverwriter = new FileWriter("activityLog.txt", false);
            myOverwriter.write("");
            myOverwriter.close();
        } catch(IOException e){
            //Display error
        }
        
        //Update activityLogTextArea
        updateActivityLogComponent();        
        
    }//GEN-LAST:event_clearButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel activityLogPanel;
    private javax.swing.JTextArea activityLogTextArea;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
